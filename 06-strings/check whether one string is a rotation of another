//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution
{
    public:
       string shift(string s){
       int len=s.size();
       string ans="";
       for(int i=1;i<len;i++){
           ans+=s[i];
       }
       ans+=s[0];
      return ans;
   }
    //Function to check if two strings are rotations of each other or not.
    bool areRotations(string s,string goal)
    {
        // Your code here
              int i;
        while( i!=s.size()){
           
            if(s==goal){
                return 1;
            }
            else {
                s=shift(s);
               
                }
                 i++;
        }
        return 0;
    }
};

//{ Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        string s1;
        string s2;
        cin>>s1>>s2;
        Solution obj;
        cout<<obj.areRotations(s1,s2)<<endl;

    }
    return 0;
}

// } Driver Code Ends

//Optimal solution

class Solution
{
    public:
    //Function to check if two strings are rotations of each other or not.
    bool areRotations(string s1,string s2)
    {
        // Your code here
        if(s1.size()!=s2.size()) return 0;
        string s=s1+s1;
         size_t found = s.find(s2);
         if (found != string::npos)return 1;
         else return 0;
    }
};
